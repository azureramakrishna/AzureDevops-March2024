Topics covered: 45 days
--------------

1. IAC (Infrastructure as a code)
    ARMTemplates (JSON)
    Terraform 
2. AzureDevops (SAAS)
    Azure Boards (agile)
    Azure repo (git & github)
    Azure Pipelines (CI CD)
        Classic editor (GUI)
        YAML pipeline 
3. Docker & Kubernets 
    ACI (Azure container instance)
    ACR (Azure container registry)
    AKS (Azure Kubernets service)



Why IAC? (Infrastructure as a code):
-----------------------------------
1. Automated way deployment 
2. Repeatable
3. Predictable
4. they are everywhere 


ARMTemplates Structure:  https://learn.microsoft.com/en-us/azure/azure-resource-manager/templates/syntax
----------------------
1. Schema           - Version of the JSON file
2. ContentVersion   - to maintain the constant version across multiple templates (ex: 1.0.0.0)
3. Parameters       - expected values from end user during the deployment 
4. Variables        - defined withing template file and cant modify during deployment 
5. Resources        - resources that you want like storage, vm, sqldb, webapp etc
6. Outputs          - values needed after resource creation (ex: vm ip address)

Getting started:
---------------
    https://learn.microsoft.com/en-us/azure/azure-resource-manager/templates/quickstart-create-templates-use-visual-studio-code

1. Install the vscode
2. Azure Resource Manager (ARM) Tools extension

ARMTemplates resources: https://learn.microsoft.com/en-us/azure/templates/

Functions:

resourcegroup().location
contact
toLower
CopyIndex()
copy
dependsOn
resourceId
reference
id

Azure - ARMTemplates & Bicep 
AWS - CloudFormation 

Terraform:
---------

ARMTemplates                                                        Terraform
------------                                                        ---------
1. IAC tool                                                         1. IAC tool 
2. Specific to Azure                                                2. Opensource (Azure, AWS, GCP, OCI etc and onprem)
3. JSON Format                                                      3. HCL (Hashicorp configuration language) language
4. Extension .JSON                                                  4. Extension .tf
5. template.json                                                    5. main.tf
    parameters.json                                                     variable.tf
6. Schema                                                           6. Terraform building blocks
    contentversion                                                      provider
    parameters                                                          resources
    variables                                                           output
    resources
    outpts
7. Azure Powershell/CLI Commands                                    7. Terraform lifecycle
    New-AzResourceGroupDeployment `                                     terraform init
    -ResourceGroupName "" `                                             terraform fmt
    -TemplateFile "" `                                                  terraform validate
    -TemplateParametersFile "" `                                        terraform plan
    -Verbose                                                            terraform apply 
                                                                        terraform destroy

Getting started with terraform:
------------------------------
Install terraform: https://developer.hashicorp.com/terraform/install
Extracted the zip file and copy paste the terraform.exe file to c:/windows
open any terminal --> type terraform 
terraform -version : v1.7.5

vscode extensions:
- Hashicorp terraform
- Azure terraform


Terraform data sources:
----------------------

RG
VNET
SNET
KEYVAULT



AzureDevops:
-----------

Azure Boards:
------------

Processes
    Basic
    Agile
    Scrum
    CMMI

Epic
feature
userstory
task
issue

Sprint1 (Iterations) Model - 2 weeks duration  April 15th - April 26th
Sprint2                                        April 29th - May 10th

Sprint planning 
    capacity planning
    User stories
    Task - 16hr

Daily standup calls - 10 to 15mins

Retrospective:

what went well
what can be improved
what didn't went well



Epic        develop an applcation like Amazon
Feature     signup page 
Backlog     login page
            home page 
            products catelog
            add to cart
            payment gateway
            tracking 
            help + support

Userstory   signup page for amazon
            loging page


Task        singup page with google
            singup page with apple id
            signup page with email and password

            login with google account
            login with apple id
            login with email and password

Issue



Git & GitHub:
------------
Download git: https://git-scm.com/downloads



git clone https://Saanvikit-March24@dev.azure.com/Saanvikit-March24/Iac/_git/Iac

Git commands:
https://confluence.atlassian.com/bitbucketserver/basic-git-commands-776639767.html